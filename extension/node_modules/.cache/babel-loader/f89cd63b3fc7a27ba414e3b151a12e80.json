{"ast":null,"code":"var INPUT_ELEMENTS_TAGS=[\"input\",\"textarea\"];var INPUT_TYPES=[\"text\",\"search\"];var shouldChangeText=function shouldChangeText(el){return INPUT_ELEMENTS_TAGS.some(function(tag){return el.tagName.toLowerCase()===\"input\"?INPUT_TYPES.some(function(attr){return attr===el.getAttribute(\"type\");}):tag===el.tagName.toLowerCase();});};// Function called when a new message is received\nvar messagesFromReactAppListener=function messagesFromReactAppListener(msg,sender,sendResponse){if(document.getSelection){var _document$getSelectio;var currentInput=document.activeElement;if(!currentInput||!shouldChangeText(currentInput))return;var textSelected=(_document$getSelectio=document.getSelection())===null||_document$getSelectio===void 0?void 0:_document$getSelectio.toString();console.log(textSelected);currentInput.value=\"bla\";}// Prepare the response object with information about the site\n// const response: DOMMessageResponse = {\n//   title: document.title,\n//   headlines,\n// };\n// sendResponse(response);\n};/**\n * Fired when a message is sent from either an extension process or a content script.\n */ // chrome.runtime.onMessage.addListener(messagesFromReactAppListener);\nchrome.runtime.onMessage.addListener(messagesFromReactAppListener);export{};","map":{"version":3,"names":["INPUT_ELEMENTS_TAGS","INPUT_TYPES","shouldChangeText","el","some","tag","tagName","toLowerCase","attr","getAttribute","messagesFromReactAppListener","msg","sender","sendResponse","document","getSelection","currentInput","activeElement","textSelected","toString","console","log","value","chrome","runtime","onMessage","addListener"],"sources":["/Users/dorwiser/projects/wrong-input-sentence-fixer/extension/src/chromeServices/DOMEvaluator.ts"],"sourcesContent":["import { DOMMessage, DOMMessageResponse } from \"./types\";\n\nconst INPUT_ELEMENTS_TAGS = [\"input\", \"textarea\"];\nconst INPUT_TYPES = [\"text\", \"search\"];\n\nconst shouldChangeText = (el: Element): boolean =>\n  INPUT_ELEMENTS_TAGS.some((tag) =>\n    el.tagName.toLowerCase() === \"input\"\n      ? INPUT_TYPES.some((attr) => attr === el.getAttribute(\"type\"))\n      : tag === el.tagName.toLowerCase()\n  );\n\n// Function called when a new message is received\nconst messagesFromReactAppListener = (\n  msg: DOMMessage,\n  sender: chrome.runtime.MessageSender,\n  sendResponse: (response: DOMMessageResponse) => void\n) => {\n  if (document.getSelection) {\n    const currentInput = document.activeElement as HTMLInputElement;\n    if (!currentInput || !shouldChangeText(currentInput)) return;\n    const textSelected = document.getSelection()?.toString();\n    console.log(textSelected);\n    currentInput.value = \"bla\";\n  }\n\n  // Prepare the response object with information about the site\n  // const response: DOMMessageResponse = {\n  //   title: document.title,\n  //   headlines,\n  // };\n\n  // sendResponse(response);\n};\n\n/**\n * Fired when a message is sent from either an extension process or a content script.\n */\n// chrome.runtime.onMessage.addListener(messagesFromReactAppListener);\nchrome.runtime.onMessage.addListener(messagesFromReactAppListener);\n"],"mappings":"AAEA,GAAMA,oBAAmB,CAAG,CAAC,OAAD,CAAU,UAAV,CAA5B,CACA,GAAMC,YAAW,CAAG,CAAC,MAAD,CAAS,QAAT,CAApB,CAEA,GAAMC,iBAAgB,CAAG,QAAnBA,iBAAmB,CAACC,EAAD,QACvBH,oBAAmB,CAACI,IAApB,CAAyB,SAACC,GAAD,QACvBF,GAAE,CAACG,OAAH,CAAWC,WAAX,KAA6B,OAA7B,CACIN,WAAW,CAACG,IAAZ,CAAiB,SAACI,IAAD,QAAUA,KAAI,GAAKL,EAAE,CAACM,YAAH,CAAgB,MAAhB,CAAnB,EAAjB,CADJ,CAEIJ,GAAG,GAAKF,EAAE,CAACG,OAAH,CAAWC,WAAX,EAHW,EAAzB,CADuB,EAAzB,CAOA;AACA,GAAMG,6BAA4B,CAAG,QAA/BA,6BAA+B,CACnCC,GADmC,CAEnCC,MAFmC,CAGnCC,YAHmC,CAIhC,CACH,GAAIC,QAAQ,CAACC,YAAb,CAA2B,2BACzB,GAAMC,aAAY,CAAGF,QAAQ,CAACG,aAA9B,CACA,GAAI,CAACD,YAAD,EAAiB,CAACd,gBAAgB,CAACc,YAAD,CAAtC,CAAsD,OACtD,GAAME,aAAY,wBAAGJ,QAAQ,CAACC,YAAT,EAAH,gDAAG,sBAAyBI,QAAzB,EAArB,CACAC,OAAO,CAACC,GAAR,CAAYH,YAAZ,EACAF,YAAY,CAACM,KAAb,CAAqB,KAArB,CACD,CAED;AACA;AACA;AACA;AACA;AAEA;AACD,CApBD,CAsBA;AACA;AACA,G,CACA;AACAC,MAAM,CAACC,OAAP,CAAeC,SAAf,CAAyBC,WAAzB,CAAqChB,4BAArC,E"},"metadata":{},"sourceType":"module"}